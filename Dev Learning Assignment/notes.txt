----------
Dev Learning Assignment

The development part of DevOps is concerned with....
1. understanding how software is built using intentional planning, coding languages, collaboration and various methodologies
2. the automation of processes that reduce the time that it takes to develop new features that a customer can use with minimal errors.

DevOps engineers must be able to understand the code that developers have written and be able to write their own code to automate the set-up and maintenance of reliable infrastructure.

Goal: Learn Python
Source: Moshâ€™s Programming Tutorial -> https://www.youtube.com/watch?v=rfscVS0vtbw
Assignment: Watch for first 4:10 hrs -> https://www.youtube.com/watch?v=_uQrJ0TkZlc  (https://www.youtube.com/watch?v=_uQrJ0TkZlc&t=9662s)

Introduction
Python most popular programming language
Used for Automation, A.I., applications, and websites like Instagram.

Talk about core cocepts of python then build 3 python projects together.
Learn how to create website for imaginary website using a python framework named Jango.
Learn how to write a python program that predicts music people like based off their profile (like youtube recommends videos)

Teach us how to use python to automate boring repetitive task.

Write python program that process thousands of spread sheets in seconds

This course is for beginners

Plenty of exercises.
-----



----------
Installing Python

Installing Python -> python.org -> downloads tab -> download python latest version
downloads folder -> double click -> click ADD python to PATH for windows.

Install code editor.
PyCharm for writing python code. IDE. integrated development environment
Additonal features that make it easy to write code.
Community edition -> download folder -> double click -> do not import settings -> custoomize -> ive never used pyCharm -> 

-----



----------
Your First Python Program

In the future we will build applications that have GUIs

-----



----------
How Code gets Executed

Python code gets executed line by line from the top.
Python interpreter. A program that knows how to translate/interpret python code into instructions our computer can ujnderstand

print("*" * 10)

anywhere we have '' we are defining a string. * 10 means we are multiplying the string by 10
"*" * 10 is also an expression. Expression is a piece of code that produces a value. first will evaluate code between (). The expression will produce 10 * and will be printed on the terminal.

-----



----------
How long does it take to learn python and be job ready? No single answer but it depends on you and how you commit/effort. spend 2 hours a day consistently. after 3 months you can write basic python programs. You need to know what you want to use python for
Web applications, AI?, Desktop aplication?, machine learning? To be a web developer learn about HTML, CSS, Javascripot and Jango. Thats anohter 6 month. 
9-12 months to be job ready.
Make a commitment!
-----



----------
Variables
Most fundamental.
Use variables to store temporary data in computers memeory.
integer is number wihtout decimal point

float are numbers with decimal point

-----



----------
Getting Input
input and print () are functions built into python.
when you have () you are calling or executing that function
-----



----------
Type conversion
TypeError: unsupported operand type(s) for -: 'int' and 'str'
integer and string
we are subtracting a string from an integer. python doesnt know what to do with it.

Whatever we type in terminal is treated as a string.
2019 - '1982'
to fix this problem we nmeed to turn the user input into an integer.

Another built in function to help us convert values into different types
int()
float()
bool() convert string into boolean value

type()

-----



----------
Strings

talks about Strings
how to make multi line Strings
index of strings.
double quotes single quotes
talk about [] brackets with index in depth.

-----



----------
Formatted Strings
Formatted strings are particually useful in situations where we want to dynamically generate some text with your varaibles.
F-strings

msg = f"{first} [{last}] is a coder." is a formatted string.
the variables in {} will be replaced with the values.

easier to visualize

-----



----------
String Methods
In this part, shopwing us cool things you can do with python strings.
introducing len() function
len() can help us input when we recieve input from a user
good when input fields have a limit. we can enfoce a limit. 
general purpose function built into python.

when using methods like .upper , it does not modifiy the original string.

introduces the find method 
course.find("P")
This will return the index of the first occurance of the character

course.find("Beginners") #returns 11 because the word beginner starts at index 11
print("python" in course) #returns false or true

method of repalcing character.
print(course.replace("Dummies", "Absolute Beginners"))
this method is case sensitive.

-----



----------
Arithmetic Operations
Talks about different operators in python
+
-
*
/ - returns a float number division
// - returns a integer number division
% - returns remainder of a division.
** - power. 10 to the power

Talks about augmented assignment operator  to increment a number
augmented assignment operator lets us write the same code in a shorter form
x = 10
x = x + 3
x += 3
-----



----------
Operator Precedence
Basically PEMDAS
basic math concept.
parenthesis
exponents
multiplcation or division
addition or subtraction
order of operations

basic math concept not python.

-----



----------
Math Functions
Talks about built in functions for python
abs() absolute function. returns positive number
round() rounds the number

handful python function. if u write a program with complex mathematical calculations. you need to import math module
module in python is seperate file with reusable code.
use this module to reoganize our code in different files.

The math module has a bunch of reusuable functions that perfom mathematical calculations

python 3 math module on google.

-----



----------
If Statements
Extremly important. Allow us to build programs that can make decisions based on conditions. Conditional programming.
if
elif
else
if true:
    do something

-----



----------
Logical Operators
We use these operators in situations where we have multiple conditions
AND: both
OR: atleast one 
not

-----



----------
Comparison Operators


-----